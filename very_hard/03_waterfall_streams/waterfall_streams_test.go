package waterfall_streams

import (
	"testing"

	"github.com/stretchr/testify/require"
)

func TestCase1(t *testing.T) {
	array := [][]float64{
		{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
		{1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
		{1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0},
		{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0},
		{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
	}
	source := 3
	expected := []float64{0.0, 0.0, 0.0, 25.0, 25.0, 0.0, 0.0}
	actual := WaterfallStreams(array, source)
	require.Equal(t, expected, actual)
}

func TestCase2(t *testing.T) {
	array := [][]float64{
		{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
		{1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0},
		{0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
		{1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0},
		{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0},
		{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
	}
	source := 3
	expected := []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}
	actual := WaterfallStreams(array, source)
	require.Equal(t, expected, actual)
}

func TestCase3(t *testing.T) {
	array := [][]float64{
		{0, 0, 0, 0, 0, 0, 0},
		{1, 0, 1, 0, 0, 0, 0},
		{0, 0, 1, 1, 1, 0, 0},
		{0, 0, 0, 0, 0, 0, 0},
		{1, 1, 1, 0, 0, 1, 0},
		{0, 0, 0, 0, 0, 0, 1},
		{0, 0, 0, 0, 0, 0, 0},
	}
	source := 3
	expected := []float64{0, 0, 0, 0, 25, 0, 0}
	actual := WaterfallStreams(array, source)
	require.Equal(t, expected, actual)
}

func TestCase4(t *testing.T) {
	array := [][]float64{
		{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
		{0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0},
		{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0},
		{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
		{0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0},
		{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
		{0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0},
		{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
		{0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0},
		{0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	}
	source := 8
	expected := []float64{25, 0, 12.5, 0, 4.6875, 0, 0, 0, 0, 7.8125, 0, 0, 3.125, 37.5}
	actual := WaterfallStreams(array, source)
	require.Equal(t, expected, actual)
}

func TestCase5(t *testing.T) {
	array := [][]float64{
		{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
		{0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0},
		{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0},
		{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
		{0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0},
		{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
		{0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0},
		{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
		{0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0},
		{0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	}
	source := 8
	expected := []float64{25, 0, 12.5, 0, 0, 0, 12.5, 6.25, 0, 3.125, 0, 0, 3.125, 37.5}
	actual := WaterfallStreams(array, source)
	require.Equal(t, expected, actual)
}

