Index: hard/04_min_rewards/min_rewards.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package min_rewards\n\nfunc MinRewards(scores []int) int {\n\treturn -1\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/hard/04_min_rewards/min_rewards.go b/hard/04_min_rewards/min_rewards.go
--- a/hard/04_min_rewards/min_rewards.go	
+++ b/hard/04_min_rewards/min_rewards.go	
@@ -1,5 +1,98 @@
 package min_rewards
 
+import "fmt"
+
+// all students must receive one reward
+// reward are all unique score is different
+// scores:  8, 4, 2, 1, 3, 6, 7, 9, 5
+// rewards: 4  3  2  1  2  3  4  5  1
+// 25
+
+// 8, 4, 2, 5, 3, 6, 7, 9, 1
+// 3  2  1  2  1  2  3  4  1
+
+
+// 0  1  2  3  4  5  6  7  8  9    10  11
+// 8, 4, 2, 1, 3, 6, 7, 9, 5, 20,  14, 12
+// 4  3  2  1  2  3  4  5  1  3     2  1
+
 func MinRewards(scores []int) int {
-	return -1
-}
+	rewards := make([]int, len(scores))
+
+	for i := 1; i < len(scores)-1; i++ {
+		if scores[i-1] < scores[i] && scores[i] > scores[i+1] {
+			// left
+			left := i
+			for left > 0 && scores[left-1] < scores[left] {
+				left--
+			}
+			// right
+			right := i
+			for right < len(scores)-1 && scores[right+1] < scores[right] {
+				right++
+			}
+
+			if right - i > i - left {
+				rewards[right] = 1
+				for right > i {
+					rewards[right-1] = rewards[right] + 1
+					right--
+				}
+
+				rewards[left] = 1
+				for left+1 < i {
+					rewards[left+1] = rewards[left] + 1
+					left++
+				}
+
+			} else {
+				rewards[left] = 1
+				for left < i {
+					rewards[left+1] = rewards[left] + 1
+					left++
+				}
+
+				rewards[right] = 1
+				for right-1 > i {
+					rewards[right-1] = rewards[right] + 1
+					right--
+				}
+
+			}
+
+		}
+
+
+
+		//if scores[i+1] > scores[i] {
+		//	if rewards[i] == 0 {
+		//		rewards[i] = 1
+		//	}
+		//
+		//	rewards[i+1] = rewards[i] + 1
+		//
+		//	for j := i; j > 0 && rewards[j-1] == 0; j-- {
+		//		if scores[j-1] > scores[j] {
+		//			rewards[j-1] = rewards[j] + 1
+		//		}
+		//	}
+		//
+		//}
+	}
+
+	fmt.Println(rewards)
+	var minRewards int
+	for _, reward := range rewards {
+		minRewards += reward
+	}
+
+	return minRewards
+}
+
+
+func abs(x int) int {
+	if x < 0 {
+		return -1 * x
+	}
+	return x
+}
\ No newline at end of file
